---
title: "Descriptive Information"
format: 
  html:
    embed-resources: true
    fig-width: 8
    fig-height: 8
    code-link: true
    code-fold: true
    code-tools: true
    df-print: paged
    toc: true
    grid:
      body-width: 900px
editor: source
---

# Load initial script

```{r}
#| output: false

source("0_load_data.R")
```

# Table describing each variable 

```{r}

# Function to map variable prefix to study wave
get_study_wave = function(var_name) {
  prefix = substr(var_name, 1, 1)
  wave_map = c(
    "a" = "1st Contact",
    "b" = "2 Year", 
    "c" = "3 Year",
    "d" = "4 Year",
    "e" = "In Home",
    "g" = "7 Year",
    "h" = "8 Year", 
    "i" = "9 Year",
    "j" = "10 Year",
    "l" = "12 Year",
    "n" = "14 Year",
    "p" = "16 Year",
    "r" = "18 Year",
    "u" = "21 Year",
    "z" = "26 Year"
  )
  return(wave_map[prefix])
}

v_rq1 = 
  data.frame(
    `Short Label` = rq1x_labels_clean,
    Description = rq1x_labels,
    `Teds Code` = ifelse(rq1x %in% colnames(df0), rq1x,paste0(rq1x,"*")),
    `Range or Level` = sapply(rq1x, function(var) {
      if (class(df[[var]]) == "numeric") {
        paste0(round(min(df[[var]], na.rm = TRUE), 2), " — ", round(max(df[[var]], na.rm = TRUE), 2))
      } else if (is.factor(df[[var]])) {
        factor_levels = levels(df[[var]])
        paste(c(paste0(factor_levels[1],"*"), factor_levels[-1]), collapse = ", ")
      } else {
        paste(unique(df[[var]]), collapse = ", ")
      }
    }),
    N = sapply(rq1x, function(var) {
      sum(!is.na(df[[var]]))
    }),
    `Study Wave` = sapply(rq1x, get_study_wave)
  )

v_rq1$Description = str_remove(v_rq1$Description,"\\(1st.*")

# Manual edit for cens01pop98density study wave
v_rq1$`Study.Wave`[v_rq1$`Teds.Code` == "cens01pop98density"] = "1st Contact"
v_rq1$`Study.Wave`[v_rq1$`Teds.Code` == "pollution1998pca"] = "1st Contact"

v_rq2 = data.frame(
  `Short Label` = rq2y_labels_short,
  Description   = rq2y_labels,
  `Teds Code` = ifelse(rq2y %in% colnames(df0), rq2y,paste0(rq2y,"*")),
  `Range or Level` = sapply(rq2y, function(var) {
    if (class(df[[var]]) == "numeric") {
      paste0(round(min(df[[var]], na.rm = TRUE), 2), " — ", round(max(df[[var]], na.rm = TRUE), 2))
    } else if (is.factor(df[[var]])) {
      factor_levels = levels(df[[var]])
      paste(c(paste0(factor_levels[1],"*"), factor_levels[-1]), collapse = ", ")
    } else {
      paste(unique(df[[var]]), collapse = ", ")
    }
  }),
  N = sapply(rq2y, function(var) {
    sum(!is.na(df[[var]]))
  }),
  `Study Wave` = sapply(rq2y, get_study_wave)
)

v_rq2$Description = str_remove(v_rq2$Description,"\\(2.*")

v_rq5 = data.frame(
  `Short Label` = rq5y_labels_short,
  Description   = var_to_label(rq5y),
  `Teds Code` = ifelse(rq5y %in% colnames(df0), rq5y,paste0(rq5y,"*")),
  `Range or Level` = sapply(rq5y, function(var) {
    if (class(df[[var]]) == "numeric") {
      paste0(round(min(df[[var]], na.rm = TRUE), 2), " — ", round(max(df[[var]], na.rm = TRUE), 2))
    } else if (is.factor(df[[var]])) {
      factor_levels = levels(df[[var]])
      paste(c(paste0(factor_levels[1],"*"), factor_levels[-1]), collapse = ", ")
    } else {
      paste(unique(df[[var]]), collapse = ", ")
    }
  }),
  N = sapply(rq5y, function(var) {
    sum(!is.na(df[[var]]))
  }),
  `Study Wave` = sapply(rq5y, get_study_wave)
)



# Combine all v_rq dataframes with row indices for grouping
v_rq1_indexed = cbind(row_group = "RQ1 Variables", row_id = 1:nrow(v_rq1), v_rq1)
v_rq2_indexed = cbind(row_group = "RQ2 Variables", row_id = (nrow(v_rq1)+1):(nrow(v_rq1)+nrow(v_rq2)), v_rq2)
v_rq5_indexed = cbind(row_group = "RQ5 Variables", row_id = (nrow(v_rq1)+nrow(v_rq2)+1):(nrow(v_rq1)+nrow(v_rq2)+nrow(v_rq5)), v_rq5)

v_rq_combined = rbind(v_rq1_indexed, v_rq2_indexed, v_rq5_indexed)

gt(v_rq_combined) %>%
  tab_row_group(
    label = "RQ5 Variables",
    rows = row_group == "RQ5 Variables"
  ) %>%
  tab_row_group(
    label = "RQ2 Variables", 
    rows = row_group == "RQ2 Variables"
  ) %>%
  tab_row_group(
    label = "RQ1 Variables",
    rows = row_group == "RQ1 Variables"
  ) %>%
  cols_hide(c(row_group, row_id)) %>%
  cols_label_with(fn = ~ gsub("\\.", " ", .x)) %>%
  tab_style(
    style = cell_text(font = "Times New Roman", size = px(12)),
    locations = cells_body()
  ) %>%
  tab_style(
    style = cell_text(font = "Times New Roman", size = px(12)),
    locations = cells_column_labels()
  ) %>%
  tab_style(
    style = cell_text(font = "Times New Roman", size = px(12)),
    locations = cells_row_groups()
  )

```


# Participation-Related plots

## Missing Data at each timepoint 

### Family-Level Participation Metrics

```{r}

df %>%
  select(c(acontact,rq1y)) %>%
  sapply(., function(x) length(which(x==1))/length(which(x>=0))) %>%
  as.data.frame() %>%
  rownames_to_column() %>%
  `colnames<-`(c("Time Point","Participation Rate")) %>%
  mutate(`Time Point` = factor(`Time Point`, levels = `Time Point`, labels = var_to_label(`Time Point`))) %>%
  ggplot(aes(x = `Participation Rate`, y = `Time Point`)) + 
  geom_col() +
    geom_text(
    aes(label = paste0(round(`Participation Rate` * 100, 1), "%")),
    hjust = 1.1,  # Right align inside the bar (>1 moves it inside)
    color = "white",
    size = 3.5,
    fontface = "bold"
  ) +
  # geom_vline(aes(xintercept=.2)) +
  theme_bw()

ggsave(file.path("plots","11_participation_rate.pdf"), width = 9, height = 5)


df %>%
  select(cohort, acontact, all_of(rq1y)) %>%
  group_by(cohort) %>%
  summarise(across(everything(), 
                   ~ length(which(. == 1)) / length(which(. >= 0)),
                   .names = "{.col}"),
            .groups = "keep") %>%
  pivot_longer(cols = -cohort, names_to = "Time Point", values_to = "Participation Rate") %>%
  mutate(
    `Time Point` = factor(`Time Point`, 
                              levels = c("acontact", rq1y), 
                              labels = var_to_label(c("acontact", rq1y))),
         Time_numeric = as.numeric(`Time Point`),
    cohort = gsub(" twins", "",cohort),
    cohort = gsub(" to ", "-",cohort)
    ) %>%
  ggplot(aes(x = Time_numeric, y = `Participation Rate`, color = cohort, group = cohort)) + 
  geom_point(size = 3) +
  geom_line(linewidth = 1) +
  geom_text(
    aes(label = paste0(round(`Participation Rate` * 100, 1), "%")),
    vjust = -0.5,
    hjust = 0.5,
    size = 3,
    show.legend = FALSE
  ) +
  scale_x_continuous(
    breaks = 1:length(c("acontact", rq1y)),
    labels = var_to_label(c("acontact", rq1y))
  ) +
  scale_y_continuous(labels = scales::percent_format()) +
  theme_bw() +
  labs(x = "Time Point", 
       y = "Participation Rate", 
       color = "Cohort",
       title = "Participation Rates Over Time by Cohort") +
  theme(legend.position = c(.8,.8),
        axis.text.x = element_text(angle = 45, hjust = 1)) + 
  theme(plot.margin = margin(t = 1, r = 1, b = 1, l = 10, unit = "mm"))

ggsave(file.path("plots","11_participation_rate_by_cohort.pdf"), width = 11, height = 9)


df %>%
  select(cohort, acontact, all_of(rq1y)) %>%
  filter(btwoyear==1) %>%
  group_by(cohort) %>%
  summarise(across(everything(), 
                   ~ length(which(. == 1)) / length(which(. >= 0)),
                   .names = "{.col}"),
            .groups = "keep") %>%
  pivot_longer(cols = -cohort, names_to = "Time Point", values_to = "Participation Rate") %>%
  mutate(
    `Time Point` = factor(`Time Point`, 
                              levels = c("acontact", rq1y), 
                              labels = var_to_label(c("acontact", rq1y))),
         Time_numeric = as.numeric(`Time Point`),
    cohort = gsub(" twins", "",cohort),
    cohort = gsub(" to ", "-",cohort)
    ) %>%
  ggplot(aes(x = Time_numeric, y = `Participation Rate`, color = cohort, group = cohort)) + 
  geom_point(size = 3) +
  geom_line(linewidth = 1) +
  geom_text(
    aes(label = paste0(round(`Participation Rate` * 100, 1), "%")),
    vjust = -0.5,
    hjust = 0.5,
    size = 3,
    show.legend = FALSE
  ) +
  scale_x_continuous(
    breaks = 1:length(c("acontact", rq1y)),
    labels = var_to_label(c("acontact", rq1y))
  ) +
  scale_y_continuous(labels = scales::percent_format()) +
  theme_bw() +
  labs(x = "Time Point", 
       y = "Participation Rate", 
       color = "Cohort",
       title = "Participation Rates Over Time by Cohort",
       subtitle = "Just selecting participants that participated at YEAR 2"
       ) +
  theme(legend.position = c(.8,.8),
        axis.text.x = element_text(angle = 45, hjust = 1)) + 
  theme(plot.margin = margin(t = 1, r = 1, b = 1, l = 10, unit = "mm"))

ggsave(file.path("plots","11_participation_rate_by_cohort_selectedy2.pdf"), width = 11, height = 9)



```

### Twin-Level Participation Metrics

#### Participation Rates

```{r}

df %>%
  select(cohort, all_of(rq1y_twin1)) %>%
  # select(cohort, !starts_with(vars_to_na)) %>%
  group_by(cohort) %>%
  summarise(across(everything(), 
                   ~ length(which(. == 1)) / length(which(. >= 0)),
                   .names = "{.col}"),
            .groups = "keep") %>%
  pivot_longer(cols = -cohort, names_to = "Time Point", values_to = "Participation Rate") %>%
  mutate(
    `Time Point` = factor(`Time Point`, 
                              levels = paste0(rq1y_twin,"1"), 
                              labels = rq1y_twin_labels),
    # Time_numeric = as.numeric(`Time Point`),
    cohort = gsub(" twins", "",cohort),
    cohort = gsub(" to ", "-",cohort)
    ) %>%
  ggplot(aes(x = `Time Point`, y = `Participation Rate`, color = cohort, group = cohort)) + 
  geom_point(size = 3) +
  geom_line(linewidth = 1) +
  geom_text(
    aes(label = paste0(round(`Participation Rate` * 100, 1), "%")),
    vjust = -0.5,
    hjust = 0.5,
    size = 3,
    show.legend = FALSE
  ) +
  # scale_x_continuous(
  #   breaks = 1:length(c("acontact", rq1y)),
  #   labels = var_to_label(c("acontact", rq1y))
  # ) +
  scale_y_continuous(labels = scales::percent_format(), limits = c(0,1)) +
  theme_bw() +
  labs(x = "Time Point", 
       y = "Participation Rate", 
       color = "Cohort",
       title = "Participation Rates Over Time by Cohort") +
  theme(legend.position = c(.8,.8),
        axis.text.x = element_text(angle = 45, hjust = 1)) + 
  theme(plot.margin = margin(t = 1, r = 1, b = 1, l = 10, unit = "mm")) 

```


#### Twin Concordance

NOTE THAT WE REMOVE COHORTS 2 & 3

ALSO FOR CORRELATIONS - I SHOULD FILTER BY TWIN == 1! 

```{r}

vars_to_na = c("btwdata","ctwdata", "gcdata","icdata","jcdata","pcwebdata")

df_cohort34_removed = df %>%
  mutate(
      across(starts_with(vars_to_na), ~ ifelse(cohort %in% c("Cohort 3: twins born Sep-95 to Aug-96","Cohort 4: twins born Sep-96 to Dec-96"), NA, .))
    )

plot_data = map_dfr(rq1y_twin, function(var){
  df_cohort34_removed %>% 
    group_by(sexzyg) %>%
    summarise(
      mean = mean(.data[[paste0(var,"1")]], na.rm = TRUE),
      cor  = cor(x=.data[[paste0(var,"1")]], y=.data[[paste0(var,"2")]], use = "pairwise.complete.obs")
    # cor  = {
    #   group_data <- cur_data()
    #   as.numeric(psych::tetrachoric(x=group_data[paste0(var,1:2)])$rho)[2]
    # }
    ) %>%
    ungroup() %>%
    mutate(variable = var)
}, .id = "var_index") %>%
  pivot_longer(cols = c(mean, cor), 
               names_to = "metric", 
               values_to = "value") %>%
  mutate(
    metric_label = case_when(
      metric == "mean" ~ "Participation Rate",
      metric == "cor" ~ "Twin Tetrachoric Correlation"
    ),
    time_point = rq1y_twin_labels_clean[match(.$variable, rq1y_twin)],
    time_point = factor(time_point, levels = rq1y_twin_labels_clean)
  )

plot_data %>%
  ggplot( aes(x = time_point, y = value, color = sexzyg, group = sexzyg)) +
  geom_line(size = 1, alpha = 0.8) +
  geom_point(size = 2.5, alpha = 0.9) +
  ggrepel::geom_text_repel(aes(label = case_when(
    metric == "mean" ~ paste0(round(value * 100, 1), "%"),
    metric == "cor" ~ gbtoolbox::apa_num(value)
  )), 
  position = position_dodge(width = 0.5), 
  vjust = 2, 
  size = 2, 
  show.legend = FALSE) +
  facet_wrap(~metric_label, scales = "free_y", ncol = 1) +
  scale_color_manual(
    values = c(
      "MZ male" = "#d7191c",
      "DZ male" = "#fdae61", 
      "MZ female" = "#2c7bb6",
      "DZ female" = "#abd9e9",
      "DZ opposite sexes" = "grey"
    )
  ) +
  ggh4x::scale_y_facet(metric_label == "Participation Rate", 
                       labels = scales::percent_format(), 
                       breaks = seq(0, 1, 0.1)) +
  labs(
    # title = "Twin Study: Participation Rates and Correlations Across Time Points",
    # subtitle = "Trends by Zygosity and Sex",
    x = "Participation Time Point",
    y = NULL,
    color = "Zygosity",
  ) +
  theme_minimal() +
  theme(
    # plot.title = element_text(size = 14, face = "bold"),
    # plot.subtitle = element_text(size = 12),
    # strip.text = element_text(size = 11, face = "bold"),
    legend.spacing.y = unit(0, "pt"),
    legend.background = element_rect(fill = alpha("white",.5), color = NA),
    legend.key.height = unit(0.6, "pt"),
    legend.text = element_text(margin = margin(t = 0, b = 0)),
    legend.position = c(0.02, 0.02),
    legend.justification = c(0, 0),
    # legend.title = element_text(face = "bold"),
    panel.grid.minor = element_blank(),
    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
    plot.margin = margin(t = 5.5, r = 5.5, b = 5.5, l = 47, unit = "pt")
  ) +
  guides(color = guide_legend(override.aes = list(size = 3)))

save_plot("11_participation_rates_zygosity", width = 7, height = 6)


```

#### Create ACE estimates plot 

```{r}
estimates = readRDS(file.path("results","1_ace_estimates.Rds"))
ci       = readRDS(file.path("results","1_ace_confints.Rds"))

estimates %>%
    mutate(
      par_clean = case_when(
        par == "a1" ~ "A",
        par == "c1" ~ "C",
        par == "e1" ~ "E"
      ),
      time_point = rq1y_twin_labels_clean[match(name, rq1y_twin)],
      time_point = factor(time_point, levels = rq1y_twin_labels_clean)
    ) %>%
    ggplot(aes(x = time_point, y = value, color = par_clean, group = interaction(sex, par_clean))) +
    geom_line(size = .5, alpha = 0.8, aes(linetype = sex)) +
    geom_point(size = 2.5, alpha = 0.9, aes(shape = sex)) +
    # ggrepel::geom_text_repel(aes(label = sprintf("%.2f", value)),
    #   size = 1.5,
    #   show.legend = FALSE,
    #   min.segment.length = 0,
    #   segment.size = 0.2,
    #   max.overlaps = Inf,
    #   direction = "y",
    #   force = 2) +
    scale_color_manual(
      values = c(
        "A" = "#d7191c",
        "C" = "#fdae61", 
        "E" = "#2c7bb6"
      )
    ) +
    scale_linetype_manual(
      values = c("male" = "solid", "female" = "dotted")
    ) +
    scale_shape_manual(
      values = c("male" = 16, "female" = 17)
    ) +
    scale_y_continuous(labels = scales::number_format(accuracy = 0.01)) +
    labs(
      x = "Participation Time Point",
      y = NULL,
      color = "ACE Component",
      linetype = "Sex",
      shape = "Sex"
    ) +
    theme_minimal() +
    theme(
      legend.background = element_blank(),
      legend.position = "top",
      legend.justification = "center",
      legend.direction = "horizontal",
      legend.box = "horizontal",
      legend.key.height = unit(0.5, "lines"),
      legend.key.width = unit(0.8, "lines"),
      legend.text = element_text(size = 8),
      legend.title = element_text(size = 9),
      legend.margin = margin(2, 2, 2, 2),
      panel.grid.minor = element_blank(),
      axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
      plot.margin = margin(t = 5.5, r = 5.5, b = 5.5, l = 47, unit = "pt"),
      plot.title = element_text(size = 8, hjust = 0.5),
      strip.text = element_text(size = 10, face = "bold")
    ) +
    guides(
      color = guide_legend(override.aes = list(size = 2), order = 1),
      linetype = guide_legend(override.aes = list(size = 0.8), order = 2),
      shape = guide_legend(override.aes = list(size = 1.5), order = 2)
    )

  save_plot("11_ACE_time", width = 7, height = 3)



```


#### ANOVA Sex & Zygosity predicting participation

```{r}

map_dfr(seq_along(rq1y_twin1), function(i){
  y_var     = rq1y_twin1[i]
  model     = glm(paste(y_var, "~ zygos + sex1"), data = df, family = binomial)
  robust_se = clubSandwich::coef_test(model, cluster = df$randomfamid, vcov = "CR0", test = "z")
  
  data.frame(
    `Time Point`    = rq1y_twin_labels_clean[i],
    `Zygosity Coef` = as.numeric(robust_se[2, "beta"]),
    `Zygosity p`    = as.numeric(robust_se[2, "p_z"]),
    `Sex Coef`      = as.numeric(robust_se[3, "beta"]),
    `Sex p`         = as.numeric(robust_se[3, "p_z"])
  )
}) %>%
  knitr::kable(digits = 3)

```


## How many different time points do we have for each participant (excluding first contact)

```{r}

df %>% 
  select(c(rq1y)) %>% 
  apply(., 1, function(x) sum(x)) %>% 
  tibble(`Number Time Points Participated` = .) %>% 
  count(`Number Time Points Participated`) %>% 
  ggplot(aes(x = `Number Time Points Participated`, y = n)) + 
  geom_col() + 
  geom_text(aes(label = n), vjust = 1.2, color = "white", size = 3.5) +
  theme_bw() + 
  labs(
    title = "How many times has each pps been tested (exl. first contact)?",
    subtitle = "Twin-level participation numbers (N = 27890)"
    )

ggsave(file.path("plots","11_number_of_times_each_twin_participated.pdf"), width = 9, height = 5)

```
## How predictive is cohort and year of birth in participation at each timepoint? 

I've checked there are no missing values for cohort or year of birth (aonsby)

[View full-sizeplot](plots/11_r2_participation_cohort_birthyear.pdf){target="_blank"}

```{r}
models = list()

for (i in seq_along(rq1y)){
  # cat(i, "/", length(rq1y),"\n")
  formula <- as.formula(paste(rq1y[i], "~ cohort + aonsby"))
  models[[i]] = glm(formula, data = df, family = binomial)
}

var_explained = sapply(models, function(x) as.numeric(performance::r2(x)))

cbind.data.frame(rq1y, rq1y_labels, var_explained) %>%
  `colnames<-`(c("Var","Label","R2 by Cohort and Birth Year")) %>%
  knitr::kable(digits = 2)


cbind.data.frame(rq1y, rq1y_labels, var_explained) %>%
  `colnames<-`(c("Var","Label","Variance Explained")) %>%
  mutate(
    Label = factor(Label, levels = rq1y_labels)
  ) %>%
  ggplot(aes(x=Label,y=`Variance Explained`)) + 
  geom_col() + 
  geom_text(aes(label = gbtoolbox::apa_num(`Variance Explained`)),
            vjust = 1.1, color = "white", size = 3) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 45, hjust=1, vjust=1)) +
  scale_x_discrete(expand = expansion(mult = c(0.1, 0)))

ggsave(file.path("plots","11_r2_participation_cohort_birthyear.pdf"), width = 9, height = 5)


```

At the Y18 time point, we see that those in cohort 1 and those born in 1994 are less likely to participate. 

```{r}

rq1y[10]

var_to_label(rq1y[10])

summary(models[[10]])

```



### Cohort alone is not helpful for determining who was eligible at t2 and t3

As we can see below, nobody in cohort 4 took part in Y2, Y3, Y10 data collection. However, a minority of participants took part in Y2-Y3 from cohort 3, but participation rates are quite low suggesting that some participants were elibile and some not. 

```{r}

 table(df0$cohort, df0$btwoyear)
 table(df0$cohort, df0$cthreeyr)
 table(df0$cohort, df0$jtenyear)

```

```{r}

 table(df0$AONSBY, df0$btwoyear)
 table(df0$AONSBY, df0$cthreeyr)
 table(df0$AONSBY, df0$jtenyear)

```




## Participation Patterns

```{r}

df %>%
  select(c(rq1y)) %>% 
  rename_with(~var_to_label(., df)) %>%
  mutate_all(~na_if(., 0)) %>%
  ggmice::plot_pattern(npat = 70, rotate = TRUE) + 
  scale_x_discrete(limits = (var_to_label(rq1y))) + 
  coord_flip()

ggsave(file.path("plots","11_participation_pattern.pdf"), width = 19, height = 6)


df %>%
  select(c(rq1y)) %>%
  mutate_all(~ .==1) %>%
  rowwise() %>%
  mutate(
    `Year 2 - 4 present`   = any(btwoyear, cthreeyr, dfouryr),
    `Year 7 - 12 present`  = any(gsevenyr, heightyr, jtenyear),
    `Year 14 - 16 present` = any(n14year, p16year),
    `Year 18 - 26 present` = any(rcqdata, uteds21data, zmhdata)
  ) %>%
  select(ends_with("present")) %>%
  mutate_all(~ na_if(., FALSE)) %>%
  ggmice::plot_pattern(rotate = TRUE) + 
  scale_x_discrete(limits = c("Year 2 - 4 present", "Year 7 - 12 present", "Year 14 - 16 present", "Year 18 - 26 present")) + 
  coord_flip()

ggsave(file.path("plots","11_participation_pattern_grouped.pdf"), width = 19, height = 6)

df %>%
  select(c(rq1y)) %>%
  rename_with(~var_to_label(., df)) %>%
  rename_with(~clean_rq1y_label(.)) %>%
  mutate_all(~ na_if(., 0)) %>%
  gbtoolbox::plot_pairwise_missing(textadjust = 2.5) +
  labs(subtitle = "Number of twins tested at each time point (diagonal) and \npair of time points (below diagonal)")

ggsave(file.path("plots","11_pairwise_missingness_plot.pdf"), width = 6, height = 6)

```


# Age of twins at each time point

[View full-size plot](plots/11_participant_ages_each_timepoint.pdf){target="_blank"}


```{r}

df_age = df %>%
  select(contains("age")) %>%
  select(-contains("genpro"), -contains("mumage"), - contains("dadage"), -ends_with("2")) 

df_age_long = df_age %>%
  `colnames<-`(var_to_label(colnames(df_age))) %>%
  pivot_longer(cols = everything())

df_age_long %>% 
  mutate(name = factor(name, levels = var_to_label(colnames(df_age)))) %>%
  ggplot(aes(x=value)) + 
  geom_histogram(bins = 100) +
  facet_wrap(~name, ncol =3) + 
  scale_x_continuous(breaks = seq(0,30,by=2)) +
  theme_bw() +
  theme(
    panel.grid.major.y = element_blank(),
    panel.grid.minor.y = element_blank()
    )

ggsave(file.path("plots","11_participant_ages_each_timepoint.pdf"), width = 12, height = 12)


```


# Classify participation patterns


[📊 Class Analysis Plot (needs work)](plots/99_class_analysis.pdf)
 

# Research Question 5




